definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  models.CreateUserInput:
    properties:
      password:
        type: string
      roleIds:
        items:
          type: integer
        type: array
      userName:
        type: string
    required:
    - password
    - userName
    type: object
  models.InputRole:
    properties:
      roleName:
        type: string
    required:
    - roleName
    type: object
  models.ResponseHTTP:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
      success:
        type: boolean
    type: object
  models.ResponseRole:
    properties:
      roleId:
        type: integer
      roleName:
        type: string
    type: object
  models.ResponseUser:
    properties:
      roles:
        items:
          $ref: '#/definitions/models.ResponseRole'
        type: array
      userId:
        type: integer
      userName:
        type: string
    type: object
  models.Role:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      roleName:
        type: string
      updatedAt:
        type: string
      users:
        description: 关联用户
        items:
          $ref: '#/definitions/models.User'
        type: array
    required:
    - roleName
    type: object
  models.UpdateRoleInput:
    properties:
      roleName:
        type: string
    required:
    - roleName
    type: object
  models.UpdateUserInput:
    properties:
      roleIds:
        items:
          type: integer
        type: array
      userName:
        type: string
    required:
    - userName
    type: object
  models.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      password:
        type: string
      roleIds:
        items:
          type: integer
        type: array
      roles:
        items:
          $ref: '#/definitions/models.Role'
        type: array
      updatedAt:
        type: string
      userName:
        type: string
    required:
    - password
    - userName
    type: object
info:
  contact: {}
  title: 管理后台API
  version: 0.0.1
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: 登录
      parameters:
      - description: 接口入参
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseHTTP'
            - properties:
                data:
                  type: string
              type: object
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
      summary: 登录
      tags:
      - 用户
  /api/v1/roles/:id:
    get:
      consumes:
      - application/json
      description: 根据角色id获取角色详情
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: 根据角色id获取角色详情
      tags:
      - 角色
  /api/v1/roles/{id}:
    delete:
      consumes:
      - application/json
      description: 删除角色信息
      parameters:
      - description: 角色id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: 删除角色信息
      tags:
      - 角色
    patch:
      consumes:
      - application/json
      description: 修改角色信息
      parameters:
      - description: 角色id
        in: path
        name: id
        required: true
        type: integer
      - description: 接口入参
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateRoleInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: 修改角色信息
      tags:
      - 角色
  /api/v1/roles/create:
    post:
      consumes:
      - application/json
      description: 创建新角色
      parameters:
      - description: 接口入参
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.InputRole'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: 创建新角色
      tags:
      - 角色
  /api/v1/roles/getAllRoles:
    get:
      consumes:
      - application/json
      description: 获取所有角色
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: 获取所有角色
      tags:
      - 角色
  /api/v1/user/{id}:
    delete:
      consumes:
      - application/json
      description: 根据id删除用户
      parameters:
      - description: 用户id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: 根据id删除用户
      tags:
      - 用户
    get:
      consumes:
      - application/json
      description: 根据id获取用户详情
      parameters:
      - description: 用户id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.User'
                  type: array
              type: object
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: 根据id获取用户详情
      tags:
      - 用户
    patch:
      consumes:
      - application/json
      description: 修改用户信息
      parameters:
      - description: 用户id
        in: path
        name: id
        required: true
        type: integer
      - description: 接口入参
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseHTTP'
            - properties:
                data:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: 修改用户信息
      tags:
      - 用户
  /api/v1/user/getAllUsers:
    get:
      consumes:
      - application/json
      description: 获取所有用户
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models.ResponseHTTP'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ResponseUser'
                  type: array
              type: object
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
      security:
      - BearerAuth: []
      summary: 获取所有用户
      tags:
      - 用户
  /api/v1/user/register:
    post:
      consumes:
      - application/json
      description: 创建新用户
      parameters:
      - description: 接口入参
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "400":
          description: 请求错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
        "500":
          description: 内部错误
          schema:
            $ref: '#/definitions/models.ResponseHTTP'
      summary: 创建新用户
      tags:
      - 用户
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
